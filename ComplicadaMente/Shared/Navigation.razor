@using Microsoft.EntityFrameworkCore
@inject ComplicadaMenteContext Context
@inject IJSRuntime JSRuntime
@inject CartService Cart

<nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
    <div class="container">
        <span class="navbar-brand fw-bold text-primary">ComplicadaMente</span>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                @if (IsAdmin) @* Admin View *@
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/products">Produtos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/orders">Encomendas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/manuals">Manuais</a>
                    </li>
                }
                @* Cliente View *@
                else if (!string.IsNullOrEmpty(UserName))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/shop">Loja</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/popular">Mais Vendidos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/my-orders">Minhas Encomendas</a>
                    </li>
                }
            </ul>
            
            <div class="navbar-nav">
                @if (!string.IsNullOrEmpty(UserName))
                {
                    @* Show cart icon only for clients *@
                    @if (!IsAdmin)
                    {
                        <a class="nav-link position-relative me-2" href="/cart" title="Carrinho">
                            <i class="fas fa-shopping-cart">ðŸ›’</i>
                            @if (Cart.Items.Count > 0)
                            {
                                <span class="badge bg-danger position-absolute top-0 start-100 translate-middle">
                                    @Cart.Items.Sum(i => i.Quantity)
                                </span>
                            }
                        </a>
                    }
                    <span class="navbar-text me-3">OlÃ¡, @UserName!</span>
                    <button class="btn btn-outline-danger btn-sm" @onclick="Logout">Sair</button>
                }
                else
                {
                    <a class="nav-link" href="/login">Login</a>
                }
            </div>
        </div>
    </div>
</nav>

@code {
    [Parameter] public bool IsAdmin { get; set; } = false;
    [Parameter] public string? UserName { get; set; }
    [Parameter] public EventCallback OnLogout { get; set; }

    protected override void OnInitialized()
    {
        Cart.OnChange += CartChanged;
    }

    private void CartChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    private async Task Logout()
    {
        if (OnLogout.HasDelegate)
        {
            await OnLogout.InvokeAsync();
        }
    }

    public void Dispose()
    {
        Cart.OnChange -= CartChanged;
    }
}